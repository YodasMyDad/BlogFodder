@page "/p/{Slug}"
@using BlogFodder.Core.Extensions
@using BlogFodder.Core.Plugins
@using BlogFodder.Core.Data
@using BlogFodder.Core.Posts.Models
@using BlogFodder.Core.Settings
@using Microsoft.EntityFrameworkCore
@using Microsoft.Extensions.Options
<PageTitle>@Post.PageTitle</PageTitle>
<HeadContent>
    <meta name="description" content="@Post.MetaDescription">
    @if (Post.NoIndex)
    {
        <meta name="robots" content="noindex">   
    }
    @*<meta name="twitter:description" content="Do we actually burn more calories standing vs sitting? And is it worth it? Let&#39;s explore this hot topic to help you decide and get the best out of your working day." />
    <meta property="og:description" content="Do we actually burn more calories standing vs sitting? And is it worth it? Let&#39;s explore this hot topic to help you decide and get the best out of your working day." />
    <meta name="twitter:title" content="Calories Burned Standing vs Sitting - Is it Worth it?" />
    <meta property="og:title" content="Calories Burned Standing vs Sitting - Is it Worth it?" />
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:image" content="https://www.chairoffice.co.uk/media/19285/standing-vs-sitting.jpg" />
    <meta property="og:image" content="https://www.chairoffice.co.uk/media/19285/standing-vs-sitting.jpg" />
    <meta property="og:image:width" content="1500" />
    <meta property="og:image:height" content="623" />
    <meta property="og:url" content="https://www.chairoffice.co.uk/blog/calories-burned-standing-vs-sitting/" />
    <meta property="og:site_name" content="ChairOffice T/A Full Range Furniture Ltd" />
    <meta property="og:type" content="website" />
    <link rel="canonical" href="https://www.chairoffice.co.uk/blog/calories-burned-standing-vs-sitting/" />*@
    
    @*<script type="application/ld+json">
        {
           "@@context":"https://schema.org",
           "@@graph":[
              {
                 "@@type":"Article",
                 "@@id":"@(currentUrl)@(Model.Url)#article",
                 "name":"@(blogHeading) - @(Model.Website.Name)",
                 "headline":"@(blogHeading)",
                 "author":{
                    "@@id":"@(currentUrl)/#author"
                 },
                 "publisher":{
                    "@@id":"@(currentUrl)/#organization"
                 },
                 "image":{
                    "@@type":"ImageObject",
                    "url":"@(currentUrl)@(defaultImage?.Url)?width=1200&height=630&mode=stretch",
                    "width":1200,
                    "height":630
                 },
                 "datePublished":"@(string.Concat(Model.CreateDate.ToUniversalTime().ToString("s"), "+00:00"))",
                 "dateModified":"@(string.Concat(Model.UpdateDate.ToUniversalTime().ToString("s"), "+00:00"))",
                 "inLanguage":"en-GB",
                 "mainEntityOfPage":{
                    "@@id":"@(currentUrl)@(Model.Url)#webpage"
                 },
                 "isPartOf":{
                    "@@id":"@(currentUrl)@(Model.Url)#webpage"
                 }
              },
              {
                 "@@type":"BreadcrumbList",
                 "@@id":"@(currentUrl)@(Model.Url)#breadcrumblist",
                 "itemListElement":[
                    {
                       "@@type":"ListItem",
                       "@@id":"@(currentUrl)/#listItem",
                       "position":1,
                       "item":{
                          "@@type":"WebPage",
                          "@@id":"@(currentUrl)",
                          "name":"Home",
                          "description":"@(Model.Website.CompanyShortDescription)",
                          "url":"@(currentUrl)"
                       },
                       "nextItem":"@(currentUrl)@(Model.Url)#listItem"
                    },
                    {
                       "@@type":"ListItem",
                       "@@id":"@(currentUrl)@(Model.Url)#listItem",
                       "position":2,
                       "item":{
                          "@@type":"WebPage",
                          "@@id":"@(currentUrl)@(Model.Url)",
                          "name":"@(blogHeading)",
                          "description":"@(Model.MetaData.Description)",
                          "url":"@(currentUrl)@(Model.Url)"
                       },
                       "previousItem":"@(currentUrl)/#listItem"
                    }
                 ]
              },
              {
                 "@@type":"Organization",
                 "@@id":"@(currentUrl)/#organization",
                 "name":"@(Model.Website.Name)",
                 "url":"@(currentUrl)",
                 "logo":{
                    "@@type":"ImageObject",
                    "url":"@(Model.Website.CompanyLogoHeader.Url)",
                    "@@id":"@(currentUrl)/#organizationLogo",
                    "width":512,
                    "height":512,
                    "caption":"@(Model.Website.Name) logo"
                 }
              },
              {
                 "@@type":"WebPage",
                 "@@id":"@(currentUrl)@(Model.Url)#webpage",
                 "url":"@(currentUrl)@(Model.Url)",
                 "name":"@(blogHeading) - @(Model.Website.Name)",
                 "description":"@(Model.MetaData.Description)",
                 "inLanguage":"en-GB",
                 "isPartOf":{
                    "@@id":"@(currentUrl)/#website"
                 },
                 "breadcrumb":{
                    "@@id":"@(currentUrl)@(Model.Url)#breadcrumblist"
                 },
                 "author":{
                    "@@id":"@(currentUrl)/#author"
                 },
                 "creator":{
                    "@@id":"@(currentUrl)/#author"
                 },
                 "image":{
                    "@@type":"ImageObject",
                    "url":"@(currentUrl)@(defaultImage?.Url)?width=1200&height=630&mode=stretch",
                    "width":1200,
                    "height":630,
                    "@@id":"@(currentUrl)/#mainImage"
                 },
                 "primaryImageOfPage":{
                    "@@id":"@(currentUrl)@(Model.Url)#mainImage"
                 },
                 "datePublished":"@(string.Concat(Model.CreateDate.ToUniversalTime().ToString("s"), "+00:00"))",
                 "dateModified":"@(string.Concat(Model.UpdateDate.ToUniversalTime().ToString("s"), "+00:00"))"
              },
              {
                 "@@type":"WebSite",
                 "@@id":"@(currentUrl)/#website",
                 "url":"@(currentUrl)",
                 "name":"@(Model.Website.Name)",
                 "description":"@(Model.Website.CompanyShortDescription)",
                 "inLanguage":"en-GB",
                 "publisher":{
                    "@@id":"@(currentUrl)/#organization"
                 }
              }
           ]
        }
    </script>*@
    
    
</HeadContent>

@if (CanBeFound)
{
    @ExtensionManager.CreateComponent(PostViewComponent, new Dictionary<string, object>
    {
        {"Post", Post}
    })
}
else
{
    <h1>Unable to find the post by the url</h1>
    <p>Need to make this return a 404!</p>
}


@code {

    [Parameter]
    public string? Slug { get; set; }

    [Inject]
    public BlogFodderDbContext DbContext { get; set; } = default!;
    
    [Inject]
    public ExtensionManager ExtensionManager { get; set; } = default!;
    
    [Inject]
    IOptionsSnapshot<BlogFodderSettings> Settings { get; set; } = default!;
    
    private string PostViewComponent { get; set; } = ""; 

    private Post Post { get; set; } = new();

    private bool CanBeFound { get; set; }

    protected override void OnInitialized()
    {
        if (!Slug.IsNullOrWhiteSpace())
        {
            var post = DbContext.Posts
                .Include(x => x.FeaturedImage)
                .Include(x => x.SocialImage)
                .Include(x => x.ContentItems).AsNoTracking().FirstOrDefault(x => x.Url == Slug);
            if (post != null)
            {
                CanBeFound = true;
                Post = post;
            }
        }
    }
    
    protected override void OnParametersSet()
    {
        PostViewComponent = Settings.Value.FrontEnd.PostViewComponent!;
    }
}