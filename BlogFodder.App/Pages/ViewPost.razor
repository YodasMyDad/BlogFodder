@page "/p/{Slug}"
@using BlogFodder.Core.Extensions
@using BlogFodder.Core.Plugins
@using BlogFodder.Core.Data
@using BlogFodder.Core.Posts.Models
@using BlogFodder.Core.Settings
@using Microsoft.EntityFrameworkCore
@using Microsoft.Extensions.Options
<PageTitle>@Post.PageTitle</PageTitle>
<HeadContent>
    <meta name="description" content="@Post.MetaDescription">
    @if (Post.NoIndex)
    {
        <meta name="robots" content="noindex">   
    }
    @*
    //TODO - Need to add Schema and open graph/social tags etc... including noindex
    *@
</HeadContent>

@if (CanBeFound)
{
    @ExtensionManager.CreateComponent(PostViewComponent, new Dictionary<string, object>
    {
        {"Post", Post}
    })
}
else
{
    <h1>Unable to find the post by the url</h1>
    <p>Need to make this return a 404!</p>
}


@code {

    [Parameter]
    public string? Slug { get; set; }

    [Inject]
    public BlogFodderDbContext DbContext { get; set; } = default!;
    
    [Inject]
    public ExtensionManager ExtensionManager { get; set; } = default!;
    
    [Inject]
    IOptionsSnapshot<BlogFodderSettings> Settings { get; set; } = default!;
    
    private string PostViewComponent { get; set; } = ""; 

    private Post Post { get; set; } = new();

    private bool CanBeFound { get; set; }

    protected override void OnInitialized()
    {
        if (!Slug.IsNullOrWhiteSpace())
        {
            var post = DbContext.Posts
                .Include(x => x.FeaturedImage)
                .Include(x => x.SocialImage)
                .Include(x => x.ContentItems).AsNoTracking().FirstOrDefault(x => x.Url == Slug);
            if (post != null)
            {
                CanBeFound = true;
                Post = post;
            }
        }
    }
    
    protected override void OnParametersSet()
    {
        PostViewComponent = Settings.Value.FrontEnd.PostViewComponent!;
    }
}