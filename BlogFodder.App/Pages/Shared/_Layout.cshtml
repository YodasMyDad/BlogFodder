@using BlogFodder.Core.Settings
@using Microsoft.Extensions.Options
@inject IOptionsSnapshot<BlogFodderSettings> Settings;
@{
    var mainSettings = Settings.Value;
}

<!doctype html>
<html lang="en">
<head>
    <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <base href="~/"/>
    <link rel="icon" type="image/png" href="@mainSettings.Favicon"/>
    @await RenderSectionAsync("Head", false)
    <link rel="stylesheet" href="BlogFodder.App.styles.css" asp-append-version="true"/>
    @(await Component.InvokeAsync("EditorPluginCss"))
</head>
<body>
    @RenderBody()
    <script src="_framework/blazor.server.js"></script>
    <script>
        // Wait until a 'reload' button appears
        new MutationObserver((mutations, observer) => {
            if (document.querySelector('#components-reconnect-modal h5')) {
                // Now every 10 seconds, see if the server appears to be back, and if so, reload
                async function attemptReload() {
                    await fetch(''); // Check the server really is back
                    location.reload();
                }
                observer.disconnect();
                attemptReload();
                setInterval(attemptReload, 2000);
            }
        }).observe(document.body, { childList: true, subtree: true });
    </script>
    @await Component.InvokeAsync("EditorPluginJs")
    @await RenderSectionAsync("Scripts", false)
</body>
</html>
