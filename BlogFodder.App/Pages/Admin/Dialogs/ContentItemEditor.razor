@using BlogFodder.Core.Plugins
@using BlogFodder.Core.Plugins.Interfaces
@using BlogFodder.Core.Posts.Models

@if (Plugin != null)
{
    <DynamicComponent Type="@Plugin.Editor?.Component"
                      Parameters="@(new Dictionary<string, object> {
                                      {"PostContentItem", ContentItem},
                                      {"SaveAndClose", EventCallback.Factory.Create<PostContentItem>(this, SaveAndClose)}
                                  })"/>
}


@code {

    [Inject]
    public ExtensionManager ExtensionManager { get; set; }

    [CascadingParameter]
    MudDialogInstance MudDialog { get; set; }

    [Parameter]
    public PostContentItem ContentItem { get; set; } = new();

    public IEditorPlugin? Plugin{ get; set; }

    public void SaveAndClose(PostContentItem data)
    {
        MudDialog.Close(DialogResult.Ok(data));
    }

    protected override void OnInitialized()
    {
        var pluginEditor = ExtensionManager.GetInstances<IEditorPlugin>(true).FirstOrDefault(x => x?.Alias == ContentItem.PluginAlias);
        if (pluginEditor != null)
        {
            Plugin = pluginEditor;
        }
    }
}