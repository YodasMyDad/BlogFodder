@page "/admin/createpost"
@page "/admin/createpost/{Id:guid}"
@using BlogFodder.Core.Posts.Models
@layout AdminLayout
<PageTitle>Create Post</PageTitle>
@if (Errors.Length > 0)
{
    <MudAlert Severity="Severity.Error" Class="my-2">
        @foreach (var error in Errors)
        {
            <MudText>@error</MudText>
        }
    </MudAlert>
}
<MudForm Model="@PostCommand" @ref="@Form" @bind-Errors="@Errors" Validation="@(CommandValidator.ValidateValue)" ValidationDelay="0">
    <MudTextField Label="Title of this post" Class="my-2"
                  Counter="1000" MaxLength="1000"
                  @bind-Value="PostCommand.Post.Name" For="@(() => PostCommand.Post.Name)" Variant="Variant.Outlined">
    </MudTextField>

    <MudTabs Outlined="true" Position="Position.Top" Rounded="true" Border="true" KeepPanelsAlive="true" ApplyEffectsToContainer="true" PanelClass="pa-6">

        <MudTabPanel Text="Details">
            <MudGrid>
                <MudItem xs="12">
                    <MudTextField Lines="5" Label="Preview Text" Variant="Variant.Outlined" Margin="Margin.Dense"
                                  HelperText="Max. 3000 characters" @bind-Value="PostCommand.Post.Excerpt" For="@(() => PostCommand.Post.Excerpt)"/>
                </MudItem>
                <MudItem xs="12">
                    <MudField Label="Featured Image">
                        @if (PostCommand.Post.FeaturedImage != null)
                        {
                            <MudImage ObjectFit="ObjectFit.Cover" Width="100" Src="@($"{PostCommand.Post.FeaturedImage.Url}?width=100")" Class="rounded"/>
                        }
                        @if (PostCommand.FeaturedImage != null)
                        {
                            <MudChip Color="Color.Default" OnClose="RemoveSelectedFeaturedImage">
                                @PostCommand?.FeaturedImage?.Name
                            </MudChip>
                        }
                        <MudStack Row="true">
                            <MudFileUpload T="IBrowserFile" For="@(() => PostCommand.FeaturedImage)" @bind-Files="PostCommand.FeaturedImage" OnFilesChanged="CheckImageSize">
                                <ButtonTemplate>
                                    <MudButton HtmlTag="label"
                                               Variant="Variant.Filled"
                                               Color="Color.Primary"
                                               StartIcon="@Icons.Material.Filled.Image"
                                               for="@context">
                                        Upload Image
                                    </MudButton>
                                </ButtonTemplate>
                            </MudFileUpload>
                            @if (PostCommand.Post.FeaturedImage != null)
                            {
                                <MudButton Variant="Variant.Text" OnClick="RemoveFeaturedImage">Remove Image</MudButton>
                            }
                        </MudStack>
                    </MudField>
                </MudItem>
                <MudItem xs="12">
                    <MudTextField @bind-Value="PostCommand.Post.Url" Label="Url" Variant="Variant.Outlined" Margin="Margin.Dense" HelperText="Url is generated from the post title if left blank"></MudTextField>
                </MudItem>
                <MudItem xs="12">
                    <MudDatePicker Label="Date Created" Variant="Variant.Outlined" Margin="Margin.Dense" PickerVariant="PickerVariant.Dialog" DisableToolbar="true" @bind-Date="PostCommand.Post.DateCreated"/>
                </MudItem>
                <MudItem xs="12">
                    <MudDatePicker Label="Date Updated" Variant="Variant.Outlined" Margin="Margin.Dense" PickerVariant="PickerVariant.Dialog" DisableToolbar="true" @bind-Date="PostCommand.Post.DateUpdated"/>
                </MudItem>
            </MudGrid>

        </MudTabPanel>

        <MudTabPanel Text="Content">

            <MudGrid Row="true">
                <MudItem>
                    <MudSelect Style="width: 400px" T="string" Variant="Variant.Outlined" Margin="Margin.Dense"
                               ValueChanged="SelectedEditorChanged"
                               Label="Choose your content type" AnchorOrigin="Origin.BottomCenter">
                        @foreach (var editor in AvailableEditorPlugins)
                        {
                            <MudSelectItem Value="@editor.Key">@editor.Value.Name</MudSelectItem>
                        }
                    </MudSelect>
                </MudItem>
                <MudItem>
                    <MudFab OnClick="AddNewContentItem" Color="Color.Primary" Size="Size.Medium" StartIcon="@Icons.Material.Filled.Add" Label="Add"/>
                </MudItem>
            </MudGrid>

            <MudDropContainer T="PostContentItem" @ref="DropContainer" Items="PostCommand.Post.ContentItems" ItemsSelector="@((item, dropzone) => item.Selector == dropzone)" ItemDropped="DropItemUpdated" Class="d-flex flex-wrap flex-grow-1">
                <ChildContent>
                    <MudGrid Class="mt-8">
                        <MudDropZone T="PostContentItem" Identifier="plugins" AllowReorder="true" Class="flex-grow-1"/>
                    </MudGrid>
                </ChildContent>
                <ItemRenderer>
                    <MudItem xs="12" Class="mb-8">
                        <MudCard @onclick="() => ShowEditor(context)" Elevation="2" Class="rounded-lg pb-4">
                            <MudCardContent>
                                <div class="d-flex align-content-center flex-grow-1 gap-4">
                                    <MudIcon Icon="@Icons.Material.Outlined.ControlCamera" Color="Color.Default" />
                                    <div class="flex-grow-1">
                                        <DynamicComponent Type="@AvailableEditorPlugins[context.PluginAlias!].Editor?.PreviewComponent"
                                                          Parameters="@(new Dictionary<string, object> {{"PostContentItem", context}})"/>
                                    </div>
                                    <MudFab Color="Color.Secondary" StartIcon="@Icons.Material.Outlined.RemoveCircleOutline" Size="Size.Medium" OnClick="() => RemoveContentItem(context)"/>
                                </div>
                            </MudCardContent>
                        </MudCard>
                    </MudItem>
                </ItemRenderer>
            </MudDropContainer>
        </MudTabPanel>

        <MudTabPanel Text="SEO">

            <MudGrid>
                <MudItem xs="12">
                    <MudTextField Label="Page Title" HelperText="Max. 60 characters" Variant="Variant.Outlined" Margin="Margin.Dense"
                                  @bind-Value="PostCommand.Post.PageTitle" For="@(() => PostCommand.Post.PageTitle)"/>
                </MudItem>
                <MudItem xs="12">
                    <MudTextField Lines="4" Label="Meta Description" HelperText="Max. 300 characters" Variant="Variant.Outlined" Margin="Margin.Dense"
                                  @bind-Value="PostCommand.Post.MetaDescription" For="@(() => PostCommand.Post.MetaDescription)"/>
                </MudItem>
                <MudItem xs="12">
                    <MudField Label="Social Image">
                        @if (PostCommand.Post.SocialImage != null)
                        {
                            <MudImage ObjectFit="ObjectFit.Cover" Width="100" Src="@($"{PostCommand.Post.SocialImage.Url}?width=100")" Class="rounded"/>
                        }
                        @if (PostCommand.SocialImage != null)
                        {
                            <MudChip Color="Color.Default" OnClose="RemoveSelectedSocialImage">
                                @PostCommand.SocialImage.Name
                            </MudChip>
                        }
                        <MudStack Row="true">
                            <MudFileUpload T="IBrowserFile" For="@(() => PostCommand.SocialImage)" @bind-Files="PostCommand.SocialImage" OnFilesChanged="CheckImageSize">
                                <ButtonTemplate>
                                    <MudButton HtmlTag="label"
                                               Variant="Variant.Filled"
                                               Color="Color.Primary"
                                               StartIcon="@Icons.Material.Filled.Image"
                                               for="@context">
                                        Upload Image
                                    </MudButton>
                                </ButtonTemplate>
                            </MudFileUpload>
                            @if (PostCommand.Post.SocialImage != null)
                            {
                                <MudButton Variant="Variant.Text" OnClick="RemoveSocialImage">Remove Image</MudButton>
                            }
                        </MudStack>
                    </MudField>
                </MudItem>
                <MudItem xs="12">
                    <MudSwitch @bind-Checked="@PostCommand.Post.NoIndex" Label="No Index" Color="Color.Info"/>
                </MudItem>
            </MudGrid>
        </MudTabPanel>

        <MudTabPanel Text="Plugins">
            
            TODO
            
        </MudTabPanel>

    </MudTabs>
    <MudItem xs="12" Class="d-flex justify-center">
        <MudButton Variant="Variant.Filled" OnClick="@(async () => await SubmitForm())" DisableElevation="true" Color="Color.Primary" Size="Size.Large" Class="mt-8">Save</MudButton>
    </MudItem>
</MudForm>