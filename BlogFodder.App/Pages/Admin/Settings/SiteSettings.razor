@page "/admin/settings"
@using BlogFodder.Core.Data
@using BlogFodder.Core.Extensions
@using BlogFodder.Core.Plugins.Commands
@using BlogFodder.Core.Settings.Models
@using MediatR
@using System.Text.Json
@using BlogFodder.Core.Plugins.Models
@layout AdminLayout
<PageTitle>Settings</PageTitle>
@if (Errors.Length > 0)
{
    <MudAlert Severity="Severity.Error" Class="my-2">
        @foreach (var error in Errors)
        {
            <MudText>@error</MudText>
        }
    </MudAlert>
}

<MudForm Model="@Settings" @ref="@Form" @bind-Errors="@Errors" ValidationDelay="0">

    <MudTabs Outlined="true" Position="Position.Top" Rounded="true" Border="true" KeepPanelsAlive="true" ApplyEffectsToContainer="true" PanelClass="pa-6">

        <MudTabPanel Text="General">

            <MudGrid>
                <MudItem xs="12">
                    <MudTextField @bind-Value="Settings.SiteName" Label="Site Name" Variant="Variant.Outlined" Margin="Margin.Dense"></MudTextField>
                </MudItem>
                <MudItem xs="12">
                    <MudTextField @bind-Value="Settings.DefaultPageTitle" Label="Default Page Title" Variant="Variant.Outlined" Margin="Margin.Dense"></MudTextField>
                </MudItem>
                <MudItem xs="12">
                    <MudTextField @bind-Value="Settings.DefaultMetaDescription" Lines="4" Label="Default Meta Description" Variant="Variant.Outlined" Margin="Margin.Dense"></MudTextField>
                </MudItem>
                <MudItem xs="12">
                    <MudNumericField @bind-Value="Settings.HomeAmountPerPage" Label="Home (Posts Per Page)" Variant="Variant.Outlined" Margin="Margin.Dense" Min="1" For="@(() => Settings.HomeAmountPerPage)"/>
                </MudItem>
            </MudGrid>

        </MudTabPanel>

    </MudTabs>
    <MudItem xs="12" Class="d-flex justify-center">
        <MudButton Variant="Variant.Filled" OnClick="@(async () => await SubmitForm())" DisableElevation="true" Color="Color.Primary" Size="Size.Large" Class="mt-8">Save</MudButton>
    </MudItem>
</MudForm>

@code {

    [Inject]
    public BlogFodderDbContext DbContext { get; set; } = default!;

    [Inject]
    private ISnackbar Snackbar { get; set; } = default!;

    [Inject]
    public IMediator Mediator { get; set; } = default!;

    private MudForm Form { get; set; } = default!;
    private Settings Settings { get; set; } = new();
    private GlobalSettings GlobalSettings { get; set; } = new();
    private bool IsUpdate { get; set; }
    private string?[] Errors { get; set; } = Array.Empty<string>();

    protected override async Task OnInitializedAsync()
    {
        GlobalSettings.Alias = Settings.Alias;
        var dbGlobalSettings = await Mediator.Send(new GetPluginSettingsCommand {Alias = GlobalSettings.Alias}).ConfigureAwait(false);
        if (dbGlobalSettings != null)
        {
            GlobalSettings = dbGlobalSettings;
            IsUpdate = true;
            var dbSettings = dbGlobalSettings.ToType<Settings>();
            if (dbSettings != null)
            {
                Settings = dbSettings;
            }
        }
    }

    private async Task SubmitForm()
    {
        GlobalSettings.Data = JsonSerializer.Serialize(Settings);
        var result = await Mediator.Send(new SavePluginSettingsCommand {Settings = GlobalSettings, IsUpdate = IsUpdate});
        if (result.Success)
        {
            GlobalSettings = result.Entity;

            var correctText = IsUpdate ? "Updated" : "Created";
            Snackbar.Add("Settings " + correctText, Severity.Success);

            if (!IsUpdate)
            {
                IsUpdate = true;
            }
        }
        else
        {
            Errors = result.Messages.ErrorMessagesToList().ToArray();
        }
    }

}