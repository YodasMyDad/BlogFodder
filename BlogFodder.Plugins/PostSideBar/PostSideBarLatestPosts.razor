@using BlogFodder.Core.Plugins.Interfaces
@using BlogFodder.Core.Plugins.Models
@using BlogFodder.Core.Posts.Models
@using Humanizer
@using Microsoft.EntityFrameworkCore
@using BlogFodder.Core.Data
@using BlogFodder.Core.Extensions
@using Microsoft.Extensions.DependencyInjection
@implements IPluginContentComponent

<div>
    <h5>Latest Posts</h5>
    <div class="list-group list-group-flush">
        @foreach (var post in LatestPosts)
        {
            <a href="@Urls.Create(post.Url, post.GetType())" class="list-group-item list-group-item-action">
                <h6 class="mb-1">@post.Name</h6>
                <small>@post.DateUpdated.Humanize()</small>
            </a>
        }
    </div>
</div>

@code {
    [Parameter] public string? Model { get; set; }
    [Parameter] public string? Settings { get; set; }
    [Parameter] public Guid? PostId { get; set; }
    
    [Inject] public IServiceProvider ServiceProvider { get; set; } = default!;
    
    private List<Post> LatestPosts { get; set; } = new();
    private PluginContentModel<string?, PostSideBarSettingsModel> PostContentModel { get; set; } = new();

    protected override void OnInitialized()
    {
        using var scope = ServiceProvider.CreateScope();
        var dbContext = scope.ServiceProvider.GetRequiredService<BlogFodderDbContext>();
        PostContentModel = new PluginContentModel<string?, PostSideBarSettingsModel>(Model, Settings);
        LatestPosts = dbContext.Posts.AsNoTracking().OrderByDescending(x => x.DateUpdated).Take(PostContentModel.PluginSettings?.LatestPostsAmount ?? 4).ToList();
    }
}